package cz.ais.sirael.framework.u3.gwtxmldto;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Objects;
import cz.ais.sirael.framework.u3.*;
import cz.ais.sirael.framework.u3.gwtxmldto.GwtXmlBase.*;
import org.json.simple.*;
import org.w3c.dom.Element;

/**
 * Modelova trida pro GslPmsInsuranceCoverRequest.
*/
public class GwtXmlGslPmsInsuranceCoverRequest implements GwtXmlSerializable, GwtXmlBuilderV2, java.io.Serializable {

  /**
   * Parser pro GwtXmlGslPmsInsuranceCoverRequest
  */
  public static final GwtXmlParser<GwtXmlGslPmsInsuranceCoverRequest> PARSER = new GwtXmlParser<GwtXmlGslPmsInsuranceCoverRequest>(){

    @Override
    @Deprecated
    public GwtXmlGslPmsInsuranceCoverRequest parse(String text) {
      Object objToParse = GwtXmlBase.fromXml(text);
      GwtXmlGslPmsInsuranceCoverRequest ret = GwtXmlGslPmsInsuranceCoverRequest.parseGwtXmlGslPmsInsuranceCoverRequest (objToParse);
      return ret;
    }

    @Override
    public GwtXmlGslPmsInsuranceCoverRequest parseJson(String text) {
      return fromJson(text);
    }

    @Override
    public GwtXmlGslPmsInsuranceCoverRequest parseXml(String text, DtoXmlVersion version) {
      Objects.requireNonNull(version, "version");
      switch (version) {
        case XML_V1:
          return fromElement(GwtXmlBase.parseXml(text));
        case XML_V2:
          return parseGwtXmlGslPmsInsuranceCoverRequestV2(GwtXmlBase.parseXml(text));
        default:
          throw new UnsupportedOperationException("Unknown DtoXmlVersion" + version + "!");
      }
    }
  };

  /**
   * Parser V2 pro GwtXmlGslPmsInsuranceCoverRequest
  */
  public static final GwtXmlParserV2<GwtXmlGslPmsInsuranceCoverRequest> PARSER_V2 = new GwtXmlParserV2<GwtXmlGslPmsInsuranceCoverRequest>(){

    @Override
    public GwtXmlGslPmsInsuranceCoverRequest parse(String text) {
      Element elToParse = GwtXmlBase.parseXml(text);
      GwtXmlGslPmsInsuranceCoverRequest ret = GwtXmlGslPmsInsuranceCoverRequest.parseGwtXmlGslPmsInsuranceCoverRequestV2 (elToParse);
      return ret;
    }
  };

 /** XML tag pro GwtXmlGslPmsInsuranceCoverRequest */
  public static final String TAG = "xml-gsl-pms-insurance-cover-request";
  /** Nazev atributu Date */
  public static final String AN_DATE = "date";
  /** Nazev atributu PolicyId */
  public static final String AN_POLICYID = "policyId";
  /** Nazev atributu AgentPolicyId */
  public static final String AN_AGENTPOLICYID = "agentPolicyId";
  /** Nazev atributu Imei */
  public static final String AN_IMEI = "imei";
  /** Nazev atributu InsuranceAgentId */
  public static final String AN_INSURANCEAGENTID = "insuranceAgentId";

  /** Atribut Date. */
  private Date date = null;
  /** Atribut PolicyId. */
  private String policyId = null;
  /** Atribut AgentPolicyId. */
  private String agentPolicyId = null;
  /** Atribut Imei. */
  private String imei = null;
  /** Atribut InsuranceAgentId. */
  private String insuranceAgentId = null;

  /**
   * Set metoda pro atribut Date.
   *
   * @param _value hodnota.
  */
  public void setDate (Date _value) {
    this.date = _value;
  }

  /**
   * Get metoda pro atribut Date.
   *
   * @return hodnota atributu.
  */
  public Date getDate() {
    return this.date;
  }

  /**
   * Set metoda pro atribut PolicyId.
   *
   * @param _value hodnota.
  */
  public void setPolicyId (String _value) {
    this.policyId = _value;
  }

  /**
   * Get metoda pro atribut PolicyId.
   *
   * @return hodnota atributu.
  */
  public String getPolicyId() {
    return this.policyId;
  }

  /**
   * Set metoda pro atribut AgentPolicyId.
   *
   * @param _value hodnota.
  */
  public void setAgentPolicyId (String _value) {
    this.agentPolicyId = _value;
  }

  /**
   * Get metoda pro atribut AgentPolicyId.
   *
   * @return hodnota atributu.
  */
  public String getAgentPolicyId() {
    return this.agentPolicyId;
  }

  /**
   * Set metoda pro atribut Imei.
   *
   * @param _value hodnota.
  */
  public void setImei (String _value) {
    this.imei = _value;
  }

  /**
   * Get metoda pro atribut Imei.
   *
   * @return hodnota atributu.
  */
  public String getImei() {
    return this.imei;
  }

  /**
   * Set metoda pro atribut InsuranceAgentId.
   *
   * @param _value hodnota.
  */
  public void setInsuranceAgentId (String _value) {
    this.insuranceAgentId = _value;
  }

  /**
   * Get metoda pro atribut InsuranceAgentId.
   *
   * @return hodnota atributu.
  */
  public String getInsuranceAgentId() {
    return this.insuranceAgentId;
  }


  /**
   * Metoda prevede instanci do XML.
   *
   * @return String xml.
  */
  public String toXml() {
    StringBuilder _result = new StringBuilder();
    _result.append ("<xml-gsl-pms-insurance-cover-request>");
      if (!GwtXmlBase.isNull (getDate())) {
        _result.append ("<date>");
        _result.append (GwtXmlBase.formatDate (getDate()));
        _result.append ("</date>");
      }
      if (!GwtXmlBase.isNull (getPolicyId())) {
        _result.append ("<policyId>");
        _result.append (GwtXmlBase.xmlEscape (getPolicyId()));
        _result.append ("</policyId>");
      }
      if (!GwtXmlBase.isNull (getAgentPolicyId())) {
        _result.append ("<agentPolicyId>");
        _result.append (GwtXmlBase.xmlEscape (getAgentPolicyId()));
        _result.append ("</agentPolicyId>");
      }
      if (!GwtXmlBase.isNull (getImei())) {
        _result.append ("<imei>");
        _result.append (GwtXmlBase.xmlEscape (getImei()));
        _result.append ("</imei>");
      }
      if (!GwtXmlBase.isNull (getInsuranceAgentId())) {
        _result.append ("<insuranceAgentId>");
        _result.append (GwtXmlBase.xmlEscape (getInsuranceAgentId()));
        _result.append ("</insuranceAgentId>");
      }
    _result.append ("</xml-gsl-pms-insurance-cover-request>");
    return _result.toString();
  }

  /**
   * Metoda prevede instanci do XML V2.
   *
   * @return String xml.
  */
  @Override
  public String toXmlV2() {
    return toXmlV2("");
  }

  /**
   * Metoda prevede instanci do XML V2.
   * Do tagu vlozi predany retezec.
   *
   * @param atributy retezec s atributy.
   * @return String xml.
  */
  @Override
  public String toXmlV2 (String atributy) {
    StringBuilder _result = new StringBuilder();
    boolean _valIsNull;
    _result.append ("<xml-gsl-pms-insurance-cover-request");
    if (!GwtXmlBase.isNull(atributy)) {
      _result.append (" " + atributy);
    }
    _result.append (">");
      if (getDate() != null) {
        _result.append ("<date>");
        _result.append (GwtXmlBase.formatDate (getDate()));
        _result.append ("</date>");
      }
      if (!GwtXmlBase.isNull(getPolicyId())) {
        _result.append ("<policyId>");
        _result.append (GwtXmlBase.xmlEscape (getPolicyId()));
        _result.append ("</policyId>");
      }
      if (!GwtXmlBase.isNull(getAgentPolicyId())) {
        _result.append ("<agentPolicyId>");
        _result.append (GwtXmlBase.xmlEscape (getAgentPolicyId()));
        _result.append ("</agentPolicyId>");
      }
      if (!GwtXmlBase.isNull(getImei())) {
        _result.append ("<imei>");
        _result.append (GwtXmlBase.xmlEscape (getImei()));
        _result.append ("</imei>");
      }
      if (!GwtXmlBase.isNull(getInsuranceAgentId())) {
        _result.append ("<insuranceAgentId>");
        _result.append (GwtXmlBase.xmlEscape (getInsuranceAgentId()));
        _result.append ("</insuranceAgentId>");
      }
    _result.append ("</xml-gsl-pms-insurance-cover-request>");
    return _result.toString();
  }

  /**
   * Metoda zjisti, zda objekt je prazdny (obsahuje pouze defaultni informace).
   *
   * @return objekt je prazdny.
  */
  public boolean isNullV2() {
      if (getDate() != null) return false;
      if (!GwtXmlBase.isNull(getPolicyId())) return false;
      if (!GwtXmlBase.isNull(getAgentPolicyId())) return false;
      if (!GwtXmlBase.isNull(getImei())) return false;
      if (!GwtXmlBase.isNull(getInsuranceAgentId())) return false;
    return true;
  }

  /**
   * Vrati hodnotu atributu pro korenovy element do XML V2.
   *
   * @return hodnota atributu.
  */
  @Override
  public String getXmlV2Atributy() {
    return "xmlns=\"www.ais.cz\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"www.ais.cz XmlGslPmsInsuranceCoverRequest.xsd\"";
  }

  /**
   * Vrati nazev souboru s XSD pro XML V2.
   *
   * @return nazev souboru.
  */
  @Override
  public String getXsdFileName() {
    return "XmlGslPmsInsuranceCoverRequest.xsd";
  }

    /**
     * Metoda prevede instanci do JSON.
     *
     * @return String json.
    */
    @Override
    public String toJson() {
      return toJson(false, 0);
    }

    /**
     * Metoda prevede instanci do vyrecneho JSON (vcetne null hodnot).
     *
     * @return String json.
    */
    @Override
    public String toJsonVerbose(int depth) {
      return toJson(true, depth);
    }

    private String toJson(boolean _verbose, int depth) {
      boolean _prependComma = false;
      StringBuilder _result = new StringBuilder();
      _result.append ('{');
      _prependComma = GwtXmlBase.jsonConstructDate (AN_DATE, _prependComma, _verbose, false, true , depth + 1, getDate(), _result);
      _prependComma = GwtXmlBase.jsonConstruct (AN_POLICYID, _prependComma, _verbose, false, false, depth + 1, getPolicyId(), _result);
      _prependComma = GwtXmlBase.jsonConstruct (AN_AGENTPOLICYID, _prependComma, _verbose, false, false, depth + 1, getAgentPolicyId(), _result);
      _prependComma = GwtXmlBase.jsonConstruct (AN_IMEI, _prependComma, _verbose, false, false, depth + 1, getImei(), _result);
      _prependComma = GwtXmlBase.jsonConstruct (AN_INSURANCEAGENTID, _prependComma, _verbose, false, false, depth + 1, getInsuranceAgentId(), _result);
    if (_verbose && _prependComma) {
      _result.append ('\n');
      GwtXmlBase.indent (_result, depth);
    }
    _result.append ('}');
    return _result.toString();
  }

  /**
   * Metoda prevede instanci do TV.
   *
   * @return String XML ve formatu TV.
  */
  public String toTvXml() {
    StringBuilder _result = new StringBuilder();
    _result.append ("<r>");
    _result.append ("<v k=\"__className__\" s=\"GwtXmlGslPmsInsuranceCoverRequest\"/>");
      if (!GwtXmlBase.isNull (getDate())) {
        _result.append ("<v k=\"date\"");
        _result.append (" t=\"").append (GwtXmlBase.formatDate (getDate())).append ("\"/>");
      } else {
        _result.append ("<v k=\"date\" n=\"\"/>");
      }
      if (!GwtXmlBase.isNull (getPolicyId())) {
        _result.append ("<v k=\"policyId\"");
        _result.append (" s=\"").append (GwtXmlBase.xmlEscape (getPolicyId())).append ("\"/>");
      } else {
        _result.append ("<v k=\"policyId\" n=\"\"/>");
      }
      if (!GwtXmlBase.isNull (getAgentPolicyId())) {
        _result.append ("<v k=\"agentPolicyId\"");
        _result.append (" s=\"").append (GwtXmlBase.xmlEscape (getAgentPolicyId())).append ("\"/>");
      } else {
        _result.append ("<v k=\"agentPolicyId\" n=\"\"/>");
      }
      if (!GwtXmlBase.isNull (getImei())) {
        _result.append ("<v k=\"imei\"");
        _result.append (" s=\"").append (GwtXmlBase.xmlEscape (getImei())).append ("\"/>");
      } else {
        _result.append ("<v k=\"imei\" n=\"\"/>");
      }
      if (!GwtXmlBase.isNull (getInsuranceAgentId())) {
        _result.append ("<v k=\"insuranceAgentId\"");
        _result.append (" s=\"").append (GwtXmlBase.xmlEscape (getInsuranceAgentId())).append ("\"/>");
      } else {
        _result.append ("<v k=\"insuranceAgentId\" n=\"\"/>");
      }
    _result.append ("</r>");
    return _result.toString();
  }

  /**
   * Metoda vytvori instanci objektu z predaneho JSON retezce.
   *
   * @param json retezec.
   * @return GwtXmlGslPmsInsuranceCoverRequest instance.
  */
  public static GwtXmlGslPmsInsuranceCoverRequest fromJson (String json) {
    if (GwtXmlBase.isNull (json)) {
      return null;
    }

    return fromOverlay ((JSONObject) JSONValue.parse (json));
  }

  /**
   * Metoda naplni atributy predaneho GwtXmlGslPmsInsuranceCoverRequest z JSONObject.
   *
   * @param _overlay rozparsovany JSON objekt.
  */
  static GwtXmlGslPmsInsuranceCoverRequest fromOverlay (JSONObject _overlay) {
    if (_overlay == null) {
      return null;
    }
    GwtXmlGslPmsInsuranceCoverRequest _result = new GwtXmlGslPmsInsuranceCoverRequest();
    _result.setDate (GwtXmlBase.parseDate ((String) _overlay.get (AN_DATE)));
    _result.setPolicyId ((String) _overlay.get (AN_POLICYID));
    _result.setAgentPolicyId ((String) _overlay.get (AN_AGENTPOLICYID));
    _result.setImei ((String) _overlay.get (AN_IMEI));
    _result.setInsuranceAgentId ((String) _overlay.get (AN_INSURANCEAGENTID));
    return _result;
  }

  /**
   *
   * @param _element Element pro rozparsovani
   * @return instance
  */
  public static GwtXmlGslPmsInsuranceCoverRequest fromElement (Element _element) {
    String _tagName = _element.getTagName();
    if (_tagName.equals ("t-v")) {
      return GwtXmlGslPmsInsuranceCoverRequest.parseGwtXmlGslPmsInsuranceCoverRequestTvXml (GwtXmlBase.findChildElement (_element, "r"));
    } else if (_tagName.equals ("r")) {
      return GwtXmlGslPmsInsuranceCoverRequest.parseGwtXmlGslPmsInsuranceCoverRequestTvXml (_element);
    } else {
      GwtXmlGslPmsInsuranceCoverRequest _result = new GwtXmlGslPmsInsuranceCoverRequest();
      for (Element _el : GwtXmlBase.findChildElements (_element, null)) {
        _tagName = _el.getTagName();
        if (_tagName.equals ("date")) {
          _result.setDate (GwtXmlBase.parseDate (GwtXmlBase.childNodesToString (_el)));
        } else if (_tagName.equals ("policyId")) {
          _result.setPolicyId (GwtXmlBase.childNodesToString (_el));
        } else if (_tagName.equals ("agentPolicyId")) {
          _result.setAgentPolicyId (GwtXmlBase.childNodesToString (_el));
        } else if (_tagName.equals ("imei")) {
          _result.setImei (GwtXmlBase.childNodesToString (_el));
        } else if (_tagName.equals ("insuranceAgentId")) {
          _result.setInsuranceAgentId (GwtXmlBase.childNodesToString (_el));
        } else {
          //throw new RestXmlParseException ("Neocekavany element \"" + _tagName + "\" v \"" + _element.getTagName() + "\"!");
        }
      }

      return _result;
    }
  }

  /**
   * Metoda z predaneho elementu XML vytvori instanci tridy GwtXmlGslPmsInsuranceCoverRequest.
   *
   * @param obj objekt pro rozparsovani. Muze byt bud XML Element nebo retezec JSONu.
   * @return instance.
  */
  @Deprecated
  public static GwtXmlGslPmsInsuranceCoverRequest parseGwtXmlGslPmsInsuranceCoverRequest (Object obj) {
    if (obj instanceof Element) {
      return fromElement ((Element) obj);
    } else {
      return fromJson ((String) obj);
    }

  }

  /**
   * Metoda z predaneho elementu XML V2 vytvori instanci tridy GwtXmlGslPmsInsuranceCoverRequest.
   *
   * @param obj XML Element
   * @return instance.
  */
  public static GwtXmlGslPmsInsuranceCoverRequest parseGwtXmlGslPmsInsuranceCoverRequestV2 (Object obj) {
    Element _element = (Element) obj;
    GwtXmlGslPmsInsuranceCoverRequest _result = new GwtXmlGslPmsInsuranceCoverRequest();
    for (Element _el : GwtXmlBase.findChildElements (_element, null)) {
      String _tagName = _el.getTagName();
      if (_tagName.equals ("date")) {
        _result.setDate (GwtXmlBase.parseDate (GwtXmlBase.childNodesToString (_el)));
      } else if (_tagName.equals ("policyId")) {
        _result.setPolicyId (GwtXmlBase.childNodesToString (_el));
      } else if (_tagName.equals ("agentPolicyId")) {
        _result.setAgentPolicyId (GwtXmlBase.childNodesToString (_el));
      } else if (_tagName.equals ("imei")) {
        _result.setImei (GwtXmlBase.childNodesToString (_el));
      } else if (_tagName.equals ("insuranceAgentId")) {
        _result.setInsuranceAgentId (GwtXmlBase.childNodesToString (_el));
      } else  {
        throw new RestXmlParseException ("Neocekavany element \"" + _tagName + "\" v \"" + _element.getTagName() + "\"!");
      }
    }


    return _result;
  }

  /**
   * Metoda z predaneho elementu XML ve formatu tiskove vety vytvori instanci tridy 
   * GwtXmlGslPmsInsuranceCoverRequest.
   *
   * @param element XML element tiskove vety.
   * @return instance.
  */
  public static GwtXmlGslPmsInsuranceCoverRequest parseGwtXmlGslPmsInsuranceCoverRequestTvXml (Element element) {
    GwtXmlGslPmsInsuranceCoverRequest _result = new GwtXmlGslPmsInsuranceCoverRequest();
    for (Element _el : GwtXmlBase.findChildElements (element, "v")) {
      String _attrName = _el.getAttribute ("k");
      if (_attrName.equals ("date")) {
        _result.setDate (_el.hasAttribute ("n") ? null : GwtXmlBase.parseDate (_el.getAttribute ("t")));
      } else if (_attrName.equals ("policyId")) {
        _result.setPolicyId (_el.hasAttribute ("n") ? null : _el.getAttribute ("s"));
      } else if (_attrName.equals ("agentPolicyId")) {
        _result.setAgentPolicyId (_el.hasAttribute ("n") ? null : _el.getAttribute ("s"));
      } else if (_attrName.equals ("imei")) {
        _result.setImei (_el.hasAttribute ("n") ? null : _el.getAttribute ("s"));
      } else if (_attrName.equals ("insuranceAgentId")) {
        _result.setInsuranceAgentId (_el.hasAttribute ("n") ? null : _el.getAttribute ("s"));
      } else {
        //throw new RestXmlParseException ("Unexpected attribute name \"" + _attrName + "\" inside \"" + _element.getTagName() + "\"!");
      }
    }

    return _result;
  }

  /**
   * Konstruktor.
  */
  public GwtXmlGslPmsInsuranceCoverRequest() {
    super();
  }
}
